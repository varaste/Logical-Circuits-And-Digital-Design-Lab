module full_adder(s , a , b , cin , cout , sout);
	input s , a , b , cin;
	output cout , sout;
	wire x , y , z , w;
	xor g1(x , b , s);
	and g2(y , x , a);
	xor g3(z , x , a);
	and g4(w , z , cin);
	xor g5(sout , z , cin);
	or g6(cout , w , y);
endmodule 

module tb;
reg s,a,b,cin;
wire cout,sout;
full_adder mgh(s , a , b , cin , cout , sout);
initial 
	begin
		s = 1'b0; a = 1'b0; b = 1'b0; cin = 1'b0;
	#30
		s = 1'b0; a = 1'b0; b = 1'b1; cin = 1'b0;
	#30
		s = 1'b0; a = 1'b1; b = 1'b0; cin = 1'b0;
	#30
		s = 1'b0; a = 1'b1; b = 1'b1; cin = 1'b0;
	#30
		s = 1'b1; a = 1'b0; b = 1'b0; cin = 1'b1;
	#30
		s = 1'b1; a = 1'b0; b = 1'b1; cin = 1'b1;
	#30
		s = 1'b1; a = 1'b1; b = 1'b0; cin = 1'b1;
	#30
		s = 1'b1; a = 1'b1; b = 1'b1; cin = 1'b1;
	#30 $finish;
	end
endmodule